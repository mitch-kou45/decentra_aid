{"ast":null,"code":"\"use strict\";\n\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.formatTransaction = formatTransaction;\nconst web3_types_1 = require(\"web3-types\");\nconst web3_validator_1 = require(\"web3-validator\");\nconst web3_utils_1 = require(\"web3-utils\");\nconst web3_errors_1 = require(\"web3-errors\");\nconst schemas_js_1 = require(\"../schemas.js\");\nfunction formatTransaction(transaction, returnFormat = web3_types_1.DEFAULT_RETURN_FORMAT, options = {\n  transactionSchema: schemas_js_1.transactionInfoSchema,\n  fillInputAndData: false\n}) {\n  var _a, _b;\n  let formattedTransaction = (0, web3_utils_1.mergeDeep)({}, transaction);\n  if (!(0, web3_validator_1.isNullish)(transaction === null || transaction === void 0 ? void 0 : transaction.common)) {\n    formattedTransaction.common = Object.assign({}, transaction.common);\n    if (!(0, web3_validator_1.isNullish)((_a = transaction.common) === null || _a === void 0 ? void 0 : _a.customChain)) formattedTransaction.common.customChain = Object.assign({}, transaction.common.customChain);\n  }\n  formattedTransaction = (0, web3_utils_1.format)((_b = options.transactionSchema) !== null && _b !== void 0 ? _b : schemas_js_1.transactionInfoSchema, formattedTransaction, returnFormat);\n  if (!(0, web3_validator_1.isNullish)(formattedTransaction.data) && !(0, web3_validator_1.isNullish)(formattedTransaction.input) &&\n  // Converting toHex is accounting for data and input being Uint8Arrays\n  // since comparing Uint8Array is not as straightforward as comparing strings\n  (0, web3_utils_1.toHex)(formattedTransaction.data) !== (0, web3_utils_1.toHex)(formattedTransaction.input)) throw new web3_errors_1.TransactionDataAndInputError({\n    data: (0, web3_utils_1.bytesToHex)(formattedTransaction.data),\n    input: (0, web3_utils_1.bytesToHex)(formattedTransaction.input)\n  });\n  if (options.fillInputAndData) {\n    if (!(0, web3_validator_1.isNullish)(formattedTransaction.data)) {\n      formattedTransaction.input = formattedTransaction.data;\n    } else if (!(0, web3_validator_1.isNullish)(formattedTransaction.input)) {\n      formattedTransaction.data = formattedTransaction.input;\n    }\n  }\n  if (!(0, web3_validator_1.isNullish)(formattedTransaction.gasLimit)) {\n    formattedTransaction.gas = formattedTransaction.gasLimit;\n    delete formattedTransaction.gasLimit;\n  }\n  return formattedTransaction;\n}","map":{"version":3,"names":["exports","formatTransaction","web3_types_1","require","web3_validator_1","web3_utils_1","web3_errors_1","schemas_js_1","transaction","returnFormat","DEFAULT_RETURN_FORMAT","options","transactionSchema","transactionInfoSchema","fillInputAndData","formattedTransaction","mergeDeep","isNullish","common","Object","assign","_a","customChain","format","_b","data","input","toHex","TransactionDataAndInputError","bytesToHex","gasLimit","gas"],"sources":["/home/ubuntu/node_modules/web3-eth/src/utils/format_transaction.ts"],"sourcesContent":["/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { Transaction, DataFormat, DEFAULT_RETURN_FORMAT, FormatType } from 'web3-types';\nimport { isNullish, ValidationSchemaInput } from 'web3-validator';\nimport { mergeDeep, format, bytesToHex, toHex } from 'web3-utils';\nimport { TransactionDataAndInputError } from 'web3-errors';\n\nimport { transactionInfoSchema } from '../schemas.js';\nimport { type CustomTransactionSchema } from '../types.js';\n\nexport function formatTransaction<\n\tReturnFormat extends DataFormat = typeof DEFAULT_RETURN_FORMAT,\n\tTransactionType extends Transaction = Transaction,\n>(\n\ttransaction: TransactionType,\n\treturnFormat: ReturnFormat = DEFAULT_RETURN_FORMAT as ReturnFormat,\n\toptions: {\n\t\ttransactionSchema?: ValidationSchemaInput | CustomTransactionSchema | undefined;\n\t\tfillInputAndData?: boolean;\n\t} = {\n\t\ttransactionSchema: transactionInfoSchema,\n\t\tfillInputAndData: false,\n\t},\n): FormatType<TransactionType, ReturnFormat> {\n\tlet formattedTransaction = mergeDeep({}, transaction as Record<string, unknown>) as Transaction;\n\tif (!isNullish(transaction?.common)) {\n\t\tformattedTransaction.common = { ...transaction.common };\n\t\tif (!isNullish(transaction.common?.customChain))\n\t\t\tformattedTransaction.common.customChain = { ...transaction.common.customChain };\n\t}\n\tformattedTransaction = format(\n\t\toptions.transactionSchema ?? transactionInfoSchema,\n\t\tformattedTransaction,\n\t\treturnFormat,\n\t);\n\tif (\n\t\t!isNullish(formattedTransaction.data) &&\n\t\t!isNullish(formattedTransaction.input) &&\n\t\t// Converting toHex is accounting for data and input being Uint8Arrays\n\t\t// since comparing Uint8Array is not as straightforward as comparing strings\n\t\ttoHex(formattedTransaction.data) !== toHex(formattedTransaction.input)\n\t)\n\t\tthrow new TransactionDataAndInputError({\n\t\t\tdata: bytesToHex(formattedTransaction.data),\n\t\t\tinput: bytesToHex(formattedTransaction.input),\n\t\t});\n\n\tif (options.fillInputAndData) {\n\t\tif (!isNullish(formattedTransaction.data)) {\n\t\t\tformattedTransaction.input = formattedTransaction.data;\n\t\t} else if (!isNullish(formattedTransaction.input)) {\n\t\t\tformattedTransaction.data = formattedTransaction.input;\n\t\t}\n\t}\n\n\tif (!isNullish(formattedTransaction.gasLimit)) {\n\t\tformattedTransaction.gas = formattedTransaction.gasLimit;\n\t\tdelete formattedTransaction.gasLimit;\n\t}\n\n\treturn formattedTransaction as FormatType<TransactionType, ReturnFormat>;\n}\n"],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;AAyBAA,OAAA,CAAAC,iBAAA,GAAAA,iBAAA;AARA,MAAAC,YAAA,GAAAC,OAAA;AACA,MAAAC,gBAAA,GAAAD,OAAA;AACA,MAAAE,YAAA,GAAAF,OAAA;AACA,MAAAG,aAAA,GAAAH,OAAA;AAEA,MAAAI,YAAA,GAAAJ,OAAA;AAGA,SAAgBF,iBAAiBA,CAIhCO,WAA4B,EAC5BC,YAAA,GAA6BP,YAAA,CAAAQ,qBAAqC,EAClEC,OAAA,GAGI;EACHC,iBAAiB,EAAEL,YAAA,CAAAM,qBAAqB;EACxCC,gBAAgB,EAAE;CAClB;;EAED,IAAIC,oBAAoB,GAAG,IAAAV,YAAA,CAAAW,SAAS,EAAC,EAAE,EAAER,WAAsC,CAAgB;EAC/F,IAAI,CAAC,IAAAJ,gBAAA,CAAAa,SAAS,EAACT,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEU,MAAM,CAAC,EAAE;IACpCH,oBAAoB,CAACG,MAAM,GAAAC,MAAA,CAAAC,MAAA,KAAQZ,WAAW,CAACU,MAAM,CAAE;IACvD,IAAI,CAAC,IAAAd,gBAAA,CAAAa,SAAS,EAAC,CAAAI,EAAA,GAAAb,WAAW,CAACU,MAAM,cAAAG,EAAA,uBAAAA,EAAA,CAAEC,WAAW,CAAC,EAC9CP,oBAAoB,CAACG,MAAM,CAACI,WAAW,GAAAH,MAAA,CAAAC,MAAA,KAAQZ,WAAW,CAACU,MAAM,CAACI,WAAW,CAAE;EACjF;EACAP,oBAAoB,GAAG,IAAAV,YAAA,CAAAkB,MAAM,EAC5B,CAAAC,EAAA,GAAAb,OAAO,CAACC,iBAAiB,cAAAY,EAAA,cAAAA,EAAA,GAAIjB,YAAA,CAAAM,qBAAqB,EAClDE,oBAAoB,EACpBN,YAAY,CACZ;EACD,IACC,CAAC,IAAAL,gBAAA,CAAAa,SAAS,EAACF,oBAAoB,CAACU,IAAI,CAAC,IACrC,CAAC,IAAArB,gBAAA,CAAAa,SAAS,EAACF,oBAAoB,CAACW,KAAK,CAAC;EACtC;EACA;EACA,IAAArB,YAAA,CAAAsB,KAAK,EAACZ,oBAAoB,CAACU,IAAI,CAAC,KAAK,IAAApB,YAAA,CAAAsB,KAAK,EAACZ,oBAAoB,CAACW,KAAK,CAAC,EAEtE,MAAM,IAAIpB,aAAA,CAAAsB,4BAA4B,CAAC;IACtCH,IAAI,EAAE,IAAApB,YAAA,CAAAwB,UAAU,EAACd,oBAAoB,CAACU,IAAI,CAAC;IAC3CC,KAAK,EAAE,IAAArB,YAAA,CAAAwB,UAAU,EAACd,oBAAoB,CAACW,KAAK;GAC5C,CAAC;EAEH,IAAIf,OAAO,CAACG,gBAAgB,EAAE;IAC7B,IAAI,CAAC,IAAAV,gBAAA,CAAAa,SAAS,EAACF,oBAAoB,CAACU,IAAI,CAAC,EAAE;MAC1CV,oBAAoB,CAACW,KAAK,GAAGX,oBAAoB,CAACU,IAAI;IACvD,CAAC,MAAM,IAAI,CAAC,IAAArB,gBAAA,CAAAa,SAAS,EAACF,oBAAoB,CAACW,KAAK,CAAC,EAAE;MAClDX,oBAAoB,CAACU,IAAI,GAAGV,oBAAoB,CAACW,KAAK;IACvD;EACD;EAEA,IAAI,CAAC,IAAAtB,gBAAA,CAAAa,SAAS,EAACF,oBAAoB,CAACe,QAAQ,CAAC,EAAE;IAC9Cf,oBAAoB,CAACgB,GAAG,GAAGhB,oBAAoB,CAACe,QAAQ;IACxD,OAAOf,oBAAoB,CAACe,QAAQ;EACrC;EAEA,OAAOf,oBAAiE;AACzE","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}