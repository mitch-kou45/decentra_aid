{"ast":null,"code":"\"use strict\";\n\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.onNewProviderDiscovered = exports.requestEIP6963Providers = exports.web3ProvidersMapUpdated = exports.eip6963ProvidersMap = exports.Eip6963EventName = void 0;\nvar Eip6963EventName;\n(function (Eip6963EventName) {\n  Eip6963EventName[\"eip6963announceProvider\"] = \"eip6963:announceProvider\";\n  Eip6963EventName[\"eip6963requestProvider\"] = \"eip6963:requestProvider\";\n})(Eip6963EventName || (exports.Eip6963EventName = Eip6963EventName = {}));\nexports.eip6963ProvidersMap = new Map();\nexports.web3ProvidersMapUpdated = 'web3:providersMapUpdated';\nconst requestEIP6963Providers = () => __awaiter(void 0, void 0, void 0, function* () {\n  return new Promise((resolve, reject) => {\n    if (typeof window === 'undefined') {\n      reject(new Error('window object not available, EIP-6963 is intended to be used within a browser'));\n    }\n    window.addEventListener(Eip6963EventName.eip6963announceProvider, event => {\n      exports.eip6963ProvidersMap.set(event.detail.info.uuid, event.detail);\n      const newEvent = new CustomEvent(exports.web3ProvidersMapUpdated, {\n        detail: exports.eip6963ProvidersMap\n      });\n      window.dispatchEvent(newEvent);\n      resolve(exports.eip6963ProvidersMap);\n    });\n    window.dispatchEvent(new Event(Eip6963EventName.eip6963requestProvider));\n  });\n});\nexports.requestEIP6963Providers = requestEIP6963Providers;\nconst onNewProviderDiscovered = callback => {\n  if (typeof window === 'undefined') {\n    throw new Error('window object not available, EIP-6963 is intended to be used within a browser');\n  }\n  window.addEventListener(exports.web3ProvidersMapUpdated, callback);\n};\nexports.onNewProviderDiscovered = onNewProviderDiscovered;","map":{"version":3,"names":["Eip6963EventName","exports","eip6963ProvidersMap","Map","web3ProvidersMapUpdated","requestEIP6963Providers","__awaiter","Promise","resolve","reject","window","Error","addEventListener","eip6963announceProvider","event","set","detail","info","uuid","newEvent","CustomEvent","dispatchEvent","Event","eip6963requestProvider","onNewProviderDiscovered","callback"],"sources":["/home/osboxes/node_modules/web3/src/web3_eip6963.ts"],"sourcesContent":["/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { Web3APISpec, EIP1193Provider } from 'web3-types';\n\nexport enum Eip6963EventName {\n\teip6963announceProvider = 'eip6963:announceProvider',\n\teip6963requestProvider = 'eip6963:requestProvider',\n}\n\nexport interface EIP6963ProviderInfo {\n\tuuid: string;\n\tname: string;\n\ticon: string;\n\trdns: string;\n}\n\nexport interface EIP6963ProviderDetail<API = Web3APISpec> {\n\tinfo: EIP6963ProviderInfo;\n\tprovider: EIP1193Provider<API>;\n}\n\nexport type EIP6963ProviderResponse = Map<string, EIP6963ProviderDetail>;\n\nexport interface EIP6963AnnounceProviderEvent<API = Web3APISpec> extends CustomEvent {\n\ttype: Eip6963EventName.eip6963announceProvider;\n\tdetail: EIP6963ProviderDetail<API>;\n}\n\nexport interface EIP6963RequestProviderEvent extends Event {\n\ttype: Eip6963EventName.eip6963requestProvider;\n}\n\nexport const eip6963ProvidersMap: EIP6963ProviderResponse = new Map();\n\nexport const web3ProvidersMapUpdated = 'web3:providersMapUpdated';\nexport interface EIP6963ProvidersMapUpdateEvent extends CustomEvent {\n\ttype: string;\n\tdetail: EIP6963ProviderResponse;\n}\n\nexport const requestEIP6963Providers = async (): Promise<EIP6963ProviderResponse> =>\n\tnew Promise((resolve, reject) => {\n\t\tif (typeof window === 'undefined') {\n\t\t\treject(\n\t\t\t\tnew Error(\n\t\t\t\t\t'window object not available, EIP-6963 is intended to be used within a browser',\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\n\t\twindow.addEventListener(Eip6963EventName.eip6963announceProvider, ((\n\t\t\tevent: EIP6963AnnounceProviderEvent,\n\t\t) => {\n\t\t\teip6963ProvidersMap.set(event.detail.info.uuid, event.detail);\n\n\t\t\tconst newEvent: EIP6963ProvidersMapUpdateEvent = new CustomEvent(\n\t\t\t\tweb3ProvidersMapUpdated,\n\t\t\t\t{ detail: eip6963ProvidersMap },\n\t\t\t);\n\n\t\t\twindow.dispatchEvent(newEvent);\n\t\t\tresolve(eip6963ProvidersMap);\n\t\t}) as EventListenerOrEventListenerObject);\n\n\t\twindow.dispatchEvent(new Event(Eip6963EventName.eip6963requestProvider));\n\t});\n\nexport const onNewProviderDiscovered = (\n\tcallback: (providerEvent: EIP6963ProvidersMapUpdateEvent) => void,\n) => {\n\tif (typeof window === 'undefined') {\n\t\tthrow new Error(\n\t\t\t'window object not available, EIP-6963 is intended to be used within a browser',\n\t\t);\n\t}\n\twindow.addEventListener(\n\t\tweb3ProvidersMapUpdated,\n\t\tcallback as EventListenerOrEventListenerObject,\n\t);\n};\n"],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmBA,IAAYA,gBAGX;AAHD,WAAYA,gBAAgB;EAC3BA,gBAAA,wDAAoD;EACpDA,gBAAA,sDAAkD;AACnD,CAAC,EAHWA,gBAAgB,KAAAC,OAAA,CAAAD,gBAAA,GAAhBA,gBAAgB;AA4BfC,OAAA,CAAAC,mBAAmB,GAA4B,IAAIC,GAAG,EAAE;AAExDF,OAAA,CAAAG,uBAAuB,GAAG,0BAA0B;AAM1D,MAAMC,uBAAuB,GAAGA,CAAA,KAA6CC,SAAA;EACnF,WAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAI;IAC/B,IAAI,OAAOC,MAAM,KAAK,WAAW,EAAE;MAClCD,MAAM,CACL,IAAIE,KAAK,CACR,+EAA+E,CAC/E,CACD;IACF;IAEAD,MAAM,CAACE,gBAAgB,CAACZ,gBAAgB,CAACa,uBAAuB,EAC/DC,KAAmC,IAChC;MACHb,OAAA,CAAAC,mBAAmB,CAACa,GAAG,CAACD,KAAK,CAACE,MAAM,CAACC,IAAI,CAACC,IAAI,EAAEJ,KAAK,CAACE,MAAM,CAAC;MAE7D,MAAMG,QAAQ,GAAmC,IAAIC,WAAW,CAC/DnB,OAAA,CAAAG,uBAAuB,EACvB;QAAEY,MAAM,EAAEf,OAAA,CAAAC;MAAmB,CAAE,CAC/B;MAEDQ,MAAM,CAACW,aAAa,CAACF,QAAQ,CAAC;MAC9BX,OAAO,CAACP,OAAA,CAAAC,mBAAmB,CAAC;IAC7B,CAAwC,CAAC;IAEzCQ,MAAM,CAACW,aAAa,CAAC,IAAIC,KAAK,CAACtB,gBAAgB,CAACuB,sBAAsB,CAAC,CAAC;EACzE,CAAC,CAAC;EAAA;AAzBUtB,OAAA,CAAAI,uBAAuB,GAAAA,uBAAA;AA2B7B,MAAMmB,uBAAuB,GACnCC,QAAiE,IAC9D;EACH,IAAI,OAAOf,MAAM,KAAK,WAAW,EAAE;IAClC,MAAM,IAAIC,KAAK,CACd,+EAA+E,CAC/E;EACF;EACAD,MAAM,CAACE,gBAAgB,CACtBX,OAAA,CAAAG,uBAAuB,EACvBqB,QAA8C,CAC9C;AACF,CAAC;AAZYxB,OAAA,CAAAuB,uBAAuB,GAAAA,uBAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}